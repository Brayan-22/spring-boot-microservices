services:
  redis-service:
    image: redis:latest
    container_name: redis-service
    expose:
      - "6379"
    networks:
      - microservices-network
  zipkin-server:
    image: openzipkin/zipkin
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - eureka.instance.hostname=zipkin-service
      - eureka.instance.preferIpAddress=true
      - JAVA_OPTS=-Dspring.profiles.active=eureka
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://zipkin-server:9411/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - microservices-network
    depends_on:
      gateway-service:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    expose:
      - "9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - microservices-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.0
    container_name: logstash
    expose:
      - "5044"
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    networks:
      - microservices-network
    depends_on:
      elasticsearch:
        condition: service_started

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    expose:
      - "5601"
    networks:
      - microservices-network
    depends_on:
      elasticsearch:
        condition: service_started

  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    expose:
      - "8761"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-server:8761/actuator/health"]
      interval: 50s
      timeout: 10s
      retries: 5
  config-server:
    image: config-server:latest
    container_name: config-server
    build:
      context: ./cloud-config-server
      dockerfile: Dockerfile
    expose:
      - "9196"
    networks:
        - microservices-network
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config-server:9196/actuator/health"]
      interval: 60s
      timeout: 20s
      retries: 10
  order-service:
    image: order-service:latest
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    expose:
      - "9092"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - ORDER_SERVICE_PORT=9092
      - CONFIG_SERVER_URI=http://config-server:9196
      - ZIPKIN_HOST=zipkin-server
      - ZIPKIN_PORT=9411
    networks:
      - microservices-network
    depends_on:
      zipkin-server:
        condition: service_started
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      logstash:
        condition: service_started
  payment-service:
    image: payment-service:latest
    container_name: payment-service
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    expose:
      - "9091"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - PAYMENT_SERVICE_PORT=9091
      - CONFIG_SERVER_URI=http://config-server:9196
      - ZIPKIN_HOST=zipkin-server
      - ZIPKIN_PORT=9411
    networks:
      - microservices-network
    depends_on:
      zipkin-server:
        condition: service_started
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      logstash:
        condition: service_started
  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    build:
      context: ./cloud-gateway
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      - REDIS_HOST=redis-service
      - REDIS_PORT=6379
      - CONFIG_SERVER_URI=http://config-server:9196
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - ZIPKIN_HOST=zipkin-server
      - ZIPKIN_PORT=9411
      - GATEWAY_PORT=8080
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://gateway-service:8080/actuator/health"]
      interval: 60s
      timeout: 20s
      retries: 10
    depends_on:
      zipkin-server:
        condition: service_started
      eureka-server:
        condition: service_healthy
      config-server:
        condition: service_healthy
      redis-service:
        condition: service_started
      order-service:
        condition: service_started
      payment-service:
        condition: service_started
volumes:
  esdata:
    driver: local
networks:
  microservices-network:
    driver: bridge