spring:

  application:
    name: GATEWAY-SERVICE
  cloud:
    gateway:
      httpclient:
        connect-timeout: 5000
        response-timeout: 5000ms
      routes:
        - id: order-route
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackUri: forward:/orderFallback
        - id: payment-route
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/payment/**
          filters:
            - name: CircuitBreaker
              args:
                name: payment-service
                fallbackUri: forward:/paymentFallback
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 5
              burstCapacity: 10
  data:
    redis:
      host: localhost
      port: 6379
  config:
    import: configserver:http://localhost:9196

server:
  port: 8080


resilience4j:
  circuitbreaker:
    instances:
      order-service:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
        ignoreExceptions:
          - org.springframework.web.client.HttpClientErrorException
  timelimiter:
    instances:
      order-service:
        timeoutDuration: 10s  # Increased timeout

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled:
        true
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.cloud.gateway.filter: TRACE
    org.springframework.cloud.gateway.handler: TRACE
    org.springframework.cloud.circuitbreaker: DEBUG
    reactor.netty: DEBUG
  file:
    path: src/resources/logs
    name: app.log